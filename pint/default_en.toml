[prefix.quecto]
value = "1e-30"
defined_symbol = "q"

[prefix.ronto]
value = "1e-27"
defined_symbol = "r"

[prefix.yocto]
value = "1e-24"
defined_symbol = "y"

[prefix.zepto]
value = "1e-21"
defined_symbol = "z"

[prefix.atto]
value = "1e-18"
defined_symbol = "a"

[prefix.femto]
value = "1e-15"
defined_symbol = "f"

[prefix.pico]
value = "1e-12"
defined_symbol = "p"

[prefix.nano]
value = "1e-9"
defined_symbol = "n"

[prefix.micro]
value = "1e-6"
defined_symbol = "µ"
aliases = [
    "μ",
    "u",
    "mu",
    "mc",
]

[prefix.milli]
value = "1e-3"
defined_symbol = "m"

[prefix.centi]
value = "1e-2"
defined_symbol = "c"

[prefix.deci]
value = "1e-1"
defined_symbol = "d"

[prefix.deca]
value = "1e+1"
defined_symbol = "da"
aliases = [
    "deka",
]

[prefix.hecto]
value = "1e2"
defined_symbol = "h"

[prefix.kilo]
value = "1e3"
defined_symbol = "k"

[prefix.mega]
value = "1e6"
defined_symbol = "M"

[prefix.giga]
value = "1e9"
defined_symbol = "G"

[prefix.tera]
value = "1e12"
defined_symbol = "T"

[prefix.peta]
value = "1e15"
defined_symbol = "P"

[prefix.exa]
value = "1e18"
defined_symbol = "E"

[prefix.zetta]
value = "1e21"
defined_symbol = "Z"

[prefix.yotta]
value = "1e24"
defined_symbol = "Y"

[prefix.ronna]
value = "1e27"
defined_symbol = "R"

[prefix.quetta]
value = "1e30"
defined_symbol = "Q"

[prefix.kibi]
value = "2**10"
defined_symbol = "Ki"

[prefix.mebi]
value = "2**20"
defined_symbol = "Mi"

[prefix.gibi]
value = "2**30"
defined_symbol = "Gi"

[prefix.tebi]
value = "2**40"
defined_symbol = "Ti"

[prefix.pebi]
value = "2**50"
defined_symbol = "Pi"

[prefix.exbi]
value = "2**60"
defined_symbol = "Ei"

[prefix.zebi]
value = "2**70"
defined_symbol = "Zi"

[prefix.yobi]
value = "2**80"
defined_symbol = "Yi"

[prefix.semi]
value = "0.5"
aliases = [
    "demi",
]

[prefix.sesqui]
value = "1.5"

[unit.meter]
defined_symbol = "m"
aliases = [
    "metre",
]
value = "[length]"

[unit.second]
defined_symbol = "s"
aliases = [
    "sec",
]
value = "[time]"

[unit.ampere]
defined_symbol = "A"
aliases = [
    "amp",
]
value = "[current]"

[unit.candela]
defined_symbol = "cd"
aliases = [
    "candle",
]
value = "[luminosity]"

[unit.gram]
defined_symbol = "g"
value = "[mass]"

[unit.mole]
defined_symbol = "mol"
value = "[substance]"

[unit.kelvin]
defined_symbol = "K"
aliases = [
    "degK",
    "°K",
    "degree_Kelvin",
    "degreeK",
]
value = "[temperature]; offset: 0"

[unit.radian]
defined_symbol = "rad"
value = "[]"

[unit.bit]
value = "[]"

[unit.count]
value = "[]"

[unit.pi]
defined_symbol = "π"
value = "3.1415926535897932384626433832795028841971693993751"

[unit.tansec]
value = "4.8481368111333441675396429478852851658848753880815e-6"

[unit.ln10]
value = "2.3025850929940456840179914546843642076011014886288"

[unit.wien_x]
value = "4.9651142317442763036987591313228939440555849867973"

[unit.wien_u]
value = "2.8214393721220788934031913302944851953458817440731"

[unit.eulers_number]
value = "2.71828182845904523536028747135266249775724709369995"

[unit.speed_of_light]
defined_symbol = "c"
aliases = [
    "c_0",
]
value = "299792458 m/s"

[unit.planck_constant]
defined_symbol = "ℎ"
value = "6.62607015e-34 J s"

[unit.elementary_charge]
defined_symbol = "e"
value = "1.602176634e-19 C"

[unit.avogadro_number]
value = "6.02214076e23"

[unit.boltzmann_constant]
defined_symbol = "k"
aliases = [
    "k_B",
]
value = "1.380649e-23 J K^-1"

[unit.standard_gravity]
defined_symbol = "g_0"
aliases = [
    "g0",
    "g_n",
    "gravity",
]
value = "9.80665 m/s^2"

[unit.standard_atmosphere]
defined_symbol = "atm"
aliases = [
    "atmosphere",
]
value = "1.01325e5 Pa"

[unit.conventional_josephson_constant]
defined_symbol = "K_J90"
value = "4.835979e14 Hz / V"

[unit.conventional_von_klitzing_constant]
defined_symbol = "R_K90"
value = "2.5812807e4 ohm"

[unit.zeta]
defined_symbol = "ζ"
value = "c / (cm/s)"

[unit.dirac_constant]
defined_symbol = "ħ"
aliases = [
    "hbar",
    "atomic_unit_of_action",
    "a_u_action",
]
value = "ℎ / (2 * π)"

[unit.avogadro_constant]
defined_symbol = "N_A"
value = "avogadro_number * mol^-1"

[unit.molar_gas_constant]
defined_symbol = "R"
value = "k * N_A"

[unit.faraday_constant]
value = "e * N_A"

[unit.conductance_quantum]
defined_symbol = "G_0"
value = "2 * e ** 2 / ℎ"

[unit.magnetic_flux_quantum]
defined_symbol = "Φ_0"
aliases = [
    "Phi_0",
]
value = "ℎ / (2 * e)"

[unit.josephson_constant]
defined_symbol = "K_J"
value = "2 * e / ℎ"

[unit.von_klitzing_constant]
defined_symbol = "R_K"
value = "ℎ / e ** 2"

[unit.stefan_boltzmann_constant]
defined_symbol = "σ"
aliases = [
    "sigma",
]
value = "2 / 15 * π ** 5 * k ** 4 / (ℎ ** 3 * c ** 2)"

[unit.first_radiation_constant]
defined_symbol = "c_1"
value = "2 * π * ℎ * c ** 2"

[unit.second_radiation_constant]
defined_symbol = "c_2"
value = "ℎ * c / k"

[unit.wien_wavelength_displacement_law_constant]
value = "ℎ * c / (k * wien_x)"

[unit.wien_frequency_displacement_law_constant]
value = "wien_u * k / ℎ"

[unit.newtonian_constant_of_gravitation]
aliases = [
    "gravitational_constant",
]
value = "6.67430e-11 m^3/(kg s^2)"

[unit.rydberg_constant]
defined_symbol = "R_∞"
aliases = [
    "R_inf",
]
value = "1.0973731568157e7 * m^-1"

[unit.electron_g_factor]
defined_symbol = "g_e"
value = "-2.00231930436092"

[unit.atomic_mass_constant]
defined_symbol = "m_u"
value = "1.66053906892e-27 kg"

[unit.electron_mass]
defined_symbol = "m_e"
aliases = [
    "atomic_unit_of_mass",
    "a_u_mass",
]
value = "9.1093837139e-31 kg"

[unit.proton_mass]
defined_symbol = "m_p"
value = "1.67262192595e-27 kg"

[unit.neutron_mass]
defined_symbol = "m_n"
value = "1.67492750056e-27 kg"

[unit.x_unit_Cu]
defined_symbol = "Xu_Cu"
value = "1.00207697e-13 m"

[unit.x_unit_Mo]
defined_symbol = "Xu_Mo"
value = "1.00209952e-13 m"

[unit.angstrom_star]
defined_symbol = "Å_star"
value = "1.00001495e-10"

[unit.fine_structure_constant]
defined_symbol = "α"
aliases = [
    "alpha",
]
value = "(2 * ℎ * R_inf / (m_e * c)) ** 0.5"

[unit.vacuum_permeability]
defined_symbol = "µ_0"
aliases = [
    "mu_0",
    "mu0",
    "magnetic_constant",
]
value = "2 * α * ℎ / (e ** 2 * c)"

[unit.vacuum_permittivity]
defined_symbol = "ε_0"
aliases = [
    "epsilon_0",
    "eps_0",
    "eps0",
    "electric_constant",
]
value = "e ** 2 / (2 * α * ℎ * c)"

[unit.impedance_of_free_space]
defined_symbol = "Z_0"
aliases = [
    "characteristic_impedance_of_vacuum",
]
value = "2 * α * ℎ / e ** 2"

[unit.coulomb_constant]
defined_symbol = "k_C"
value = "α * hbar * c / e ** 2"

[unit.classical_electron_radius]
defined_symbol = "r_e"
value = "α * hbar / (m_e * c)"

[unit.thomson_cross_section]
defined_symbol = "σ_e"
aliases = [
    "sigma_e",
]
value = "8 / 3 * π * r_e ** 2"

[unit.turn]
aliases = [
    "revolution",
    "cycle",
    "circle",
]
value = "2 * π * radian"

[unit.degree]
defined_symbol = "deg"
aliases = [
    "arcdeg",
    "arcdegree",
    "angular_degree",
]
value = "π / 180 * radian"

[unit.arcminute]
defined_symbol = "arcmin"
aliases = [
    "arc_minute",
    "angular_minute",
]
value = "degree / 60"

[unit.arcsecond]
defined_symbol = "arcsec"
aliases = [
    "arc_second",
    "angular_second",
]
value = "arcminute / 60"

[unit.milliarcsecond]
defined_symbol = "mas"
value = "1e-3 * arcsecond"

[unit.grade]
defined_symbol = "grad"
aliases = [
    "gon",
]
value = "π / 200 * radian"

[unit.mil]
value = "π / 32000 * radian"

[unit.steradian]
defined_symbol = "sr"
value = "radian ** 2"

[unit.square_degree]
defined_symbol = "sq_deg"
aliases = [
    "sqdeg",
]
value = "(π / 180) ** 2 * sr"

[unit.baud]
defined_symbol = "Bd"
aliases = [
    "bps",
]
value = "bit / second"

[unit.byte]
defined_symbol = "B"
aliases = [
    "octet",
]
value = "8 * bit"

[unit.percent]
defined_symbol = "%"
value = "0.01"

[unit.permille]
defined_symbol = "‰"
value = "0.001"

[unit.ppm]
value = "1e-6"

[unit.angstrom]
defined_symbol = "Å"
aliases = [
    "ångström",
    "Å",
]
value = "1e-10 * meter"

[unit.micron]
defined_symbol = "µ"
aliases = [
    "μ",
]
value = "micrometer"

[unit.fermi]
defined_symbol = "fm"
value = "femtometer"

[unit.light_year]
defined_symbol = "ly"
aliases = [
    "lightyear",
]
value = "speed_of_light * julian_year"

[unit.astronomical_unit]
defined_symbol = "au"
value = "149597870700 * meter"

[unit.parsec]
defined_symbol = "pc"
value = "1 / tansec * astronomical_unit"

[unit.nautical_mile]
defined_symbol = "nmi"
value = "1852 * meter"

[unit.bohr]
defined_symbol = "a_0"
aliases = [
    "a0",
    "bohr_radius",
    "atomic_unit_of_length",
    "a_u_length",
]
value = "hbar / (alpha * m_e * c)"

[unit.planck_length]
value = "(hbar * gravitational_constant / c ** 3) ** 0.5"

[unit.metric_ton]
defined_symbol = "t"
aliases = [
    "tonne",
]
value = "1e3 * kilogram"

[unit.unified_atomic_mass_unit]
defined_symbol = "u"
aliases = [
    "amu",
]
value = "atomic_mass_constant"

[unit.dalton]
defined_symbol = "Da"
value = "atomic_mass_constant"

[unit.grain]
defined_symbol = "gr"
value = "64.79891 * milligram"

[unit.gamma_mass]
value = "microgram"

[unit.carat]
defined_symbol = "ct"
aliases = [
    "karat",
]
value = "200 * milligram"

[unit.planck_mass]
value = "(hbar * c / gravitational_constant) ** 0.5"

[unit.minute]
defined_symbol = "min"
value = "60 * second"

[unit.hour]
defined_symbol = "h"
aliases = [
    "hr",
]
value = "60 * minute"

[unit.day]
defined_symbol = "d"
value = "24 * hour"

[unit.week]
value = "7 * day"

[unit.fortnight]
value = "2 * week"

[unit.year]
defined_symbol = "a"
aliases = [
    "yr",
    "julian_year",
]
value = "365.25 * day"

[unit.month]
value = "year / 12"

[unit.century]
aliases = [
    "centuries",
]
value = "100 * year"

[unit.millennium]
aliases = [
    "millennia",
]
value = "1e3 * year"

[unit.eon]
value = "1e9 * year"

[unit.shake]
value = "1e-8 * second"

[unit.svedberg]
value = "1e-13 * second"

[unit.atomic_unit_of_time]
defined_symbol = "a_u_time"
value = "hbar / E_h"

[unit.gregorian_year]
value = "365.2425 * day"

[unit.sidereal_year]
value = "365.256363004 * day"

[unit.tropical_year]
value = "365.242190402 * day"

[unit.common_year]
value = "365 * day"

[unit.leap_year]
value = "366 * day"

[unit.sidereal_day]
value = "day / 1.00273790935079524"

[unit.sidereal_month]
value = "27.32166155 * day"

[unit.tropical_month]
value = "27.321582 * day"

[unit.synodic_month]
aliases = [
    "lunar_month",
]
value = "29.530589 * day"

[unit.planck_time]
value = "(hbar * gravitational_constant / c ** 5) ** 0.5"

[unit.degree_Celsius]
defined_symbol = "°C"
aliases = [
    "celsius",
    "degC",
    "degreeC",
]
value = "kelvin; offset: 273.15"

[unit.degree_Rankine]
defined_symbol = "°R"
aliases = [
    "rankine",
    "degR",
    "degreeR",
]
value = "5 / 9 * kelvin; offset: 0"

[unit.degree_Fahrenheit]
defined_symbol = "°F"
aliases = [
    "fahrenheit",
    "degF",
    "degreeF",
]
value = "5 / 9 * kelvin; offset: 233.15 + 200 / 9"

[unit.degree_Reaumur]
defined_symbol = "°Re"
aliases = [
    "reaumur",
    "degRe",
    "degreeRe",
    "degree_Réaumur",
    "réaumur",
]
value = "4 / 5 * kelvin; offset: 273.15"

[unit.atomic_unit_of_temperature]
defined_symbol = "a_u_temp"
value = "E_h / k"

[unit.planck_temperature]
value = "(hbar * c ** 5 / gravitational_constant / k ** 2) ** 0.5"

[unit.are]
value = "100 * meter ** 2"

[unit.barn]
defined_symbol = "b"
value = "1e-28 * meter ** 2"

[unit.darcy]
value = "centipoise * centimeter ** 2 / (second * atmosphere)"

[unit.hectare]
defined_symbol = "ha"
value = "100 * are"

[unit.liter]
defined_symbol = "l"
aliases = [
    "L",
    "ℓ",
    "litre",
]
value = "decimeter ** 3"

[unit.cubic_centimeter]
defined_symbol = "cc"
value = "centimeter ** 3"

[unit.lambda]
defined_symbol = "λ"
value = "microliter"

[unit.stere]
value = "meter ** 3"

[unit.hertz]
defined_symbol = "Hz"
value = "1 / second"

[unit.revolutions_per_minute]
defined_symbol = "rpm"
value = "revolution / minute"

[unit.revolutions_per_second]
defined_symbol = "rps"
value = "revolution / second"

[unit.counts_per_second]
defined_symbol = "cps"
value = "count / second"

[unit.reciprocal_centimeter]
defined_symbol = "cm_1"
aliases = [
    "kayser",
]
value = "1 / cm"

[unit.knot]
defined_symbol = "kt"
aliases = [
    "knot_international",
    "international_knot",
]
value = "nautical_mile / hour"

[unit.mile_per_hour]
defined_symbol = "mph"
aliases = [
    "MPH",
]
value = "mile / hour"

[unit.kilometer_per_hour]
defined_symbol = "kph"
aliases = [
    "KPH",
]
value = "kilometer / hour"

[unit.kilometer_per_second]
defined_symbol = "kps"
value = "kilometer / second"

[unit.meter_per_second]
defined_symbol = "mps"
value = "meter / second"

[unit.foot_per_second]
defined_symbol = "fps"
value = "foot / second"

[unit.sverdrup]
defined_symbol = "sv"
value = "1e6 * meter ** 3 / second"

[unit.galileo]
defined_symbol = "Gal"
value = "centimeter / second ** 2"

[unit.newton]
defined_symbol = "N"
value = "kilogram * meter / second ** 2"

[unit.dyne]
defined_symbol = "dyn"
value = "gram * centimeter / second ** 2"

[unit.force_kilogram]
defined_symbol = "kgf"
aliases = [
    "kilogram_force",
    "pond",
]
value = "g_0 * kilogram"

[unit.force_gram]
defined_symbol = "gf"
aliases = [
    "gram_force",
]
value = "g_0 * gram"

[unit.force_metric_ton]
defined_symbol = "tf"
aliases = [
    "metric_ton_force",
    "force_t",
    "t_force",
]
value = "g_0 * metric_ton"

[unit.atomic_unit_of_force]
defined_symbol = "a_u_force"
value = "E_h / a_0"

[unit.joule]
defined_symbol = "J"
value = "newton * meter"

[unit.erg]
value = "dyne * centimeter"

[unit.watt_hour]
defined_symbol = "Wh"
aliases = [
    "watthour",
]
value = "watt * hour"

[unit.electron_volt]
defined_symbol = "eV"
value = "e * volt"

[unit.rydberg]
defined_symbol = "Ry"
value = "ℎ * c * R_inf"

[unit.hartree]
defined_symbol = "E_h"
aliases = [
    "Eh",
    "hartree_energy",
    "atomic_unit_of_energy",
    "a_u_energy",
]
value = "2 * rydberg"

[unit.calorie]
defined_symbol = "cal"
aliases = [
    "thermochemical_calorie",
    "cal_th",
]
value = "4.184 * joule"

[unit.international_calorie]
defined_symbol = "cal_it"
aliases = [
    "international_steam_table_calorie",
]
value = "4.1868 * joule"

[unit.fifteen_degree_calorie]
defined_symbol = "cal_15"
value = "4.1855 * joule"

[unit.british_thermal_unit]
defined_symbol = "Btu"
aliases = [
    "BTU",
    "Btu_iso",
]
value = "1055.056 * joule"

[unit.international_british_thermal_unit]
defined_symbol = "Btu_it"
value = "1e3 * pound / kilogram * degR / kelvin * international_calorie"

[unit.thermochemical_british_thermal_unit]
defined_symbol = "Btu_th"
value = "1e3 * pound / kilogram * degR / kelvin * calorie"

[unit.quadrillion_Btu]
defined_symbol = "quad"
value = "1e15 * Btu"

[unit.therm]
defined_symbol = "thm"
aliases = [
    "EC_therm",
]
value = "1e5 * Btu"

[unit.US_therm]
value = "1.054804e8 * joule"

[unit.ton_TNT]
defined_symbol = "tTNT"
value = "1e9 * calorie"

[unit.tonne_of_oil_equivalent]
defined_symbol = "toe"
value = "1e10 * international_calorie"

[unit.atmosphere_liter]
defined_symbol = "atm_l"
value = "atmosphere * liter"

[unit.watt]
defined_symbol = "W"
value = "joule / second"

[unit.volt_ampere]
defined_symbol = "VA"
value = "volt * ampere"

[unit.horsepower]
defined_symbol = "hp"
aliases = [
    "UK_horsepower",
    "hydraulic_horsepower",
]
value = "550 * foot * force_pound / second"

[unit.boiler_horsepower]
value = "33475 * Btu / hour"

[unit.metric_horsepower]
value = "75 * force_kilogram * meter / second"

[unit.electrical_horsepower]
value = "746 * watt"

[unit.refrigeration_ton]
aliases = [
    "ton_of_refrigeration",
]
value = "12e3 * Btu / hour"

[unit.cooling_tower_ton]
value = "1.25 * refrigeration_ton"

[unit.standard_liter_per_minute]
defined_symbol = "slpm"
aliases = [
    "slm",
]
value = "atmosphere * liter / minute"

[unit.conventional_watt_90]
defined_symbol = "W_90"
value = "K_J90 ** 2 * R_K90 / (K_J ** 2 * R_K) * watt"

[unit.mercury]
defined_symbol = "Hg"
aliases = [
    "Hg_0C",
    "Hg_32F",
    "conventional_mercury",
]
value = "13.5951 * kilogram / liter"

[unit.water]
defined_symbol = "H2O"
aliases = [
    "conventional_water",
]
value = "1.0 * kilogram / liter"

[unit.mercury_60F]
defined_symbol = "Hg_60F"
value = "13.5568 * kilogram / liter"

[unit.water_39F]
defined_symbol = "water_4C"
value = "0.999972 * kilogram / liter"

[unit.water_60F]
value = "0.999001 * kilogram / liter"

[unit.pascal]
defined_symbol = "Pa"
value = "newton / meter ** 2"

[unit.barye]
defined_symbol = "Ba"
aliases = [
    "barie",
    "barad",
    "barrie",
    "baryd",
]
value = "dyne / centimeter ** 2"

[unit.bar]
value = "1e5 * pascal"

[unit.technical_atmosphere]
defined_symbol = "at"
value = "kilogram * g_0 / centimeter ** 2"

[unit.torr]
value = "atm / 760"

[unit.pound_force_per_square_inch]
defined_symbol = "psi"
value = "force_pound / inch ** 2"

[unit.kip_per_square_inch]
defined_symbol = "ksi"
value = "kip / inch ** 2"

[unit.millimeter_Hg]
defined_symbol = "mmHg"
aliases = [
    "mm_Hg",
    "millimeter_Hg_0C",
]
value = "millimeter * Hg * g_0"

[unit.centimeter_Hg]
defined_symbol = "cmHg"
aliases = [
    "cm_Hg",
    "centimeter_Hg_0C",
]
value = "centimeter * Hg * g_0"

[unit.inch_Hg]
defined_symbol = "inHg"
aliases = [
    "in_Hg",
    "inch_Hg_32F",
]
value = "inch * Hg * g_0"

[unit.inch_Hg_60F]
value = "inch * Hg_60F * g_0"

[unit.inch_H2O_39F]
value = "inch * water_39F * g_0"

[unit.inch_H2O_60F]
value = "inch * water_60F * g_0"

[unit.foot_H2O]
defined_symbol = "ftH2O"
aliases = [
    "feet_H2O",
]
value = "foot * water * g_0"

[unit.centimeter_H2O]
defined_symbol = "cmH2O"
aliases = [
    "cm_H2O",
]
value = "centimeter * water * g_0"

[unit.sound_pressure_level]
defined_symbol = "SPL"
value = "20e-6 * pascal"

[unit.foot_pound]
defined_symbol = "ft_lb"
aliases = [
    "footpound",
]
value = "foot * force_pound"

[unit.poise]
defined_symbol = "P"
value = "0.1 * Pa * second"

[unit.reyn]
value = "psi * second"

[unit.stokes]
defined_symbol = "St"
value = "centimeter ** 2 / second"

[unit.rhe]
value = "1 / poise"

[unit.particle]
aliases = [
    "molec",
    "molecule",
]
value = "1 / N_A"

[unit.molar]
defined_symbol = "M"
value = "mole / liter"

[unit.katal]
defined_symbol = "kat"
value = "mole / second"

[unit.enzyme_unit]
defined_symbol = "U"
aliases = [
    "enzymeunit",
]
value = "micromole / minute"

[unit.clausius]
defined_symbol = "Cl"
value = "calorie / kelvin"

[unit.entropy_unit]
defined_symbol = "eu"
value = "calorie / kelvin / mole"

[unit.becquerel]
defined_symbol = "Bq"
value = "counts_per_second"

[unit.curie]
defined_symbol = "Ci"
value = "3.7e10 * becquerel"

[unit.rutherford]
defined_symbol = "Rd"
value = "1e6 * becquerel"

[unit.gray]
defined_symbol = "Gy"
value = "joule / kilogram"

[unit.sievert]
defined_symbol = "Sv"
value = "joule / kilogram"

[unit.rads]
value = "0.01 * gray"

[unit.rem]
value = "0.01 * sievert"

[unit.roentgen]
aliases = [
    "röntgen",
]
value = "2.58e-4 * coulomb / kilogram"

[unit.peak_sun_hour]
defined_symbol = "PSH"
value = "1e3 * watt_hour / meter ** 2"

[unit.langley]
defined_symbol = "Ly"
value = "thermochemical_calorie / centimeter ** 2"

[unit.nit]
value = "candela / meter ** 2"

[unit.stilb]
value = "candela / centimeter ** 2"

[unit.lambert]
value = "1 / π * candela / centimeter ** 2"

[unit.lumen]
defined_symbol = "lm"
value = "candela * steradian"

[unit.lux]
defined_symbol = "lx"
value = "lumen / meter ** 2"

[unit.atomic_unit_of_intensity]
defined_symbol = "a_u_intensity"
value = "0.5 * ε_0 * c * atomic_unit_of_electric_field ** 2"

[unit.biot]
defined_symbol = "Bi"
value = "10 * ampere"

[unit.abampere]
defined_symbol = "abA"
value = "biot"

[unit.atomic_unit_of_current]
defined_symbol = "a_u_current"
value = "e / atomic_unit_of_time"

[unit.mean_international_ampere]
defined_symbol = "A_it"
value = "mean_international_volt / mean_international_ohm"

[unit.US_international_ampere]
defined_symbol = "A_US"
value = "US_international_volt / US_international_ohm"

[unit.conventional_ampere_90]
defined_symbol = "A_90"
value = "K_J90 * R_K90 / (K_J * R_K) * ampere"

[unit.planck_current]
value = "(c ** 6 / gravitational_constant / k_C) ** 0.5"

[unit.coulomb]
defined_symbol = "C"
value = "ampere * second"

[unit.abcoulomb]
defined_symbol = "abC"
value = "10 * C"

[unit.faraday]
value = "e * N_A * mole"

[unit.conventional_coulomb_90]
defined_symbol = "C_90"
value = "K_J90 * R_K90 / (K_J * R_K) * coulomb"

[unit.ampere_hour]
defined_symbol = "Ah"
value = "ampere * hour"

[unit.volt]
defined_symbol = "V"
value = "joule / coulomb"

[unit.abvolt]
defined_symbol = "abV"
value = "1e-8 * volt"

[unit.mean_international_volt]
defined_symbol = "V_it"
value = "1.00034 * volt"

[unit.US_international_volt]
defined_symbol = "V_US"
value = "1.00033 * volt"

[unit.conventional_volt_90]
defined_symbol = "V_90"
value = "K_J90 / K_J * volt"

[unit.atomic_unit_of_electric_field]
defined_symbol = "a_u_electric_field"
value = "e * k_C / a_0 ** 2"

[unit.townsend]
defined_symbol = "Td"
value = "1e-21 * V * m^2"

[unit.ohm]
defined_symbol = "Ω"
value = "volt / ampere"

[unit.abohm]
defined_symbol = "abΩ"
value = "1e-9 * ohm"

[unit.mean_international_ohm]
defined_symbol = "Ω_it"
aliases = [
    "ohm_it",
]
value = "1.00049 * ohm"

[unit.US_international_ohm]
defined_symbol = "Ω_US"
aliases = [
    "ohm_US",
]
value = "1.000495 * ohm"

[unit.conventional_ohm_90]
defined_symbol = "Ω_90"
aliases = [
    "ohm_90",
]
value = "R_K / R_K90 * ohm"

[unit.siemens]
defined_symbol = "S"
aliases = [
    "mho",
]
value = "ampere / volt"

[unit.absiemens]
defined_symbol = "abS"
aliases = [
    "abmho",
]
value = "1e9 * siemens"

[unit.farad]
defined_symbol = "F"
value = "coulomb / volt"

[unit.abfarad]
defined_symbol = "abF"
value = "1e9 * farad"

[unit.conventional_farad_90]
defined_symbol = "F_90"
value = "R_K90 / R_K * farad"

[unit.weber]
defined_symbol = "Wb"
value = "volt * second"

[unit.unit_pole]
value = "µ_0 * biot * centimeter"

[unit.henry]
defined_symbol = "H"
value = "weber / ampere"

[unit.abhenry]
defined_symbol = "abH"
value = "1e-9 * henry"

[unit.conventional_henry_90]
defined_symbol = "H_90"
value = "R_K / R_K90 * henry"

[unit.tesla]
defined_symbol = "T"
value = "weber / meter ** 2"

[unit.gamma]
defined_symbol = "γ"
value = "1e-9 * tesla"

[unit.ampere_turn]
defined_symbol = "At"
value = "ampere"

[unit.biot_turn]
value = "biot"

[unit.gilbert]
defined_symbol = "Gb"
value = "1 / (4 * π) * biot_turn"

[unit.debye]
defined_symbol = "D"
value = "1e-9 / ζ * coulomb * angstrom"

[unit.buckingham]
value = "debye * angstrom"

[unit.bohr_magneton]
defined_symbol = "µ_B"
aliases = [
    "mu_B",
]
value = "e * hbar / (2 * m_e)"

[unit.nuclear_magneton]
defined_symbol = "µ_N"
aliases = [
    "mu_N",
]
value = "e * hbar / (2 * m_p)"

[unit.refractive_index_unit]
defined_symbol = "RIU"
value = "[]"

[unit.decibelwatt]
defined_symbol = "dBW"
value = "watt; logbase: 10; logfactor: 10"

[unit.decibelmilliwatt]
defined_symbol = "dBm"
value = "1e-3 watt; logbase: 10; logfactor: 10"

[unit.decibelmicrowatt]
defined_symbol = "dBu"
value = "1e-6 watt; logbase: 10; logfactor: 10"

[unit.decibel]
defined_symbol = "dB"
value = "1 ; logbase: 10; logfactor: 10"

[unit.decade]
value = "1 ; logbase: 10; logfactor: 1"

[unit.octave]
defined_symbol = "oct"
value = "1 ; logbase: 2; logfactor: 1"

[unit.neper]
defined_symbol = "Np"
value = "1 ; logbase: 2.71828182845904523536028747135266249775724709369995; logfactor: 0.5"

[unit.thou]
defined_symbol = "th"
aliases = [
    "mil_length",
]
value = "1e-3 * inch"

[unit.inch]
defined_symbol = "in"
aliases = [
    "international_inch",
    "inches",
    "international_inches",
]
value = "yard / 36"

[unit.hand]
value = "4 * inch"

[unit.foot]
defined_symbol = "ft"
aliases = [
    "international_foot",
    "feet",
    "international_feet",
]
value = "yard / 3"

[unit.yard]
defined_symbol = "yd"
aliases = [
    "international_yard",
]
value = "0.9144 * meter"

[unit.mile]
defined_symbol = "mi"
aliases = [
    "international_mile",
]
value = "1760 * yard"

[unit.circular_mil]
defined_symbol = "cmil"
value = "π / 4 * mil_length ** 2"

[unit.square_inch]
defined_symbol = "sq_in"
aliases = [
    "square_inches",
]
value = "inch ** 2"

[unit.square_foot]
defined_symbol = "sq_ft"
aliases = [
    "square_feet",
]
value = "foot ** 2"

[unit.square_yard]
defined_symbol = "sq_yd"
value = "yard ** 2"

[unit.square_mile]
defined_symbol = "sq_mi"
value = "mile ** 2"

[unit.cubic_inch]
defined_symbol = "cu_in"
value = "in ** 3"

[unit.cubic_foot]
defined_symbol = "cu_ft"
aliases = [
    "cubic_feet",
]
value = "ft ** 3"

[unit.cubic_yard]
defined_symbol = "cu_yd"
value = "yd ** 3"

[unit.link]
defined_symbol = "li"
aliases = [
    "survey_link",
]
value = "1e-2 * chain"

[unit.survey_foot]
defined_symbol = "sft"
value = "1200 / 3937 * meter"

[unit.fathom]
value = "6 * survey_foot"

[unit.rod]
defined_symbol = "rd"
aliases = [
    "pole",
    "perch",
]
value = "16.5 * survey_foot"

[unit.chain]
value = "4 * rod"

[unit.furlong]
defined_symbol = "fur"
value = "40 * rod"

[unit.cables_length]
value = "120 * fathom"

[unit.survey_mile]
defined_symbol = "smi"
aliases = [
    "us_statute_mile",
]
value = "5280 * survey_foot"

[unit.league]
value = "3 * survey_mile"

[unit.square_rod]
defined_symbol = "sq_rod"
aliases = [
    "sq_pole",
    "sq_perch",
]
value = "rod ** 2"

[unit.acre]
value = "10 * chain ** 2"

[unit.square_survey_mile]
aliases = [
    "section",
]
value = "survey_mile ** 2"

[unit.square_league]
value = "league ** 2"

[unit.acre_foot]
aliases = [
    "acre_feet",
]
value = "acre * survey_foot"

[unit.dry_pint]
defined_symbol = "dpi"
aliases = [
    "US_dry_pint",
]
value = "bushel / 64"

[unit.dry_quart]
defined_symbol = "dqt"
aliases = [
    "US_dry_quart",
]
value = "bushel / 32"

[unit.dry_gallon]
defined_symbol = "dgal"
aliases = [
    "US_dry_gallon",
]
value = "bushel / 8"

[unit.peck]
defined_symbol = "pk"
value = "bushel / 4"

[unit.bushel]
defined_symbol = "bu"
value = "2150.42 cubic_inch"

[unit.dry_barrel]
aliases = [
    "US_dry_barrel",
]
value = "7056 cubic_inch"

[unit.board_foot]
defined_symbol = "FBM"
aliases = [
    "board_feet",
    "BF",
    "BDFT",
    "super_foot",
    "superficial_foot",
    "super_feet",
    "superficial_feet",
]
value = "ft * ft * in"

[unit.minim]
value = "pint / 7680"

[unit.fluid_dram]
defined_symbol = "fldr"
aliases = [
    "fluidram",
    "US_fluid_dram",
    "US_liquid_dram",
]
value = "pint / 128"

[unit.fluid_ounce]
defined_symbol = "floz"
aliases = [
    "US_fluid_ounce",
    "US_liquid_ounce",
]
value = "pint / 16"

[unit.gill]
defined_symbol = "gi"
aliases = [
    "liquid_gill",
    "US_liquid_gill",
]
value = "pint / 4"

[unit.pint]
defined_symbol = "pt"
aliases = [
    "liquid_pint",
    "US_pint",
]
value = "quart / 2"

[unit.fifth]
aliases = [
    "US_liquid_fifth",
]
value = "gallon / 5"

[unit.quart]
defined_symbol = "qt"
aliases = [
    "liquid_quart",
    "US_liquid_quart",
]
value = "gallon / 4"

[unit.gallon]
defined_symbol = "gal"
aliases = [
    "liquid_gallon",
    "US_liquid_gallon",
]
value = "231 * cubic_inch"

[unit.teaspoon]
defined_symbol = "tsp"
value = "fluid_ounce / 6"

[unit.tablespoon]
defined_symbol = "tbsp"
value = "fluid_ounce / 2"

[unit.shot]
defined_symbol = "jig"
aliases = [
    "US_shot",
]
value = "3 * tablespoon"

[unit.cup]
defined_symbol = "cp"
aliases = [
    "liquid_cup",
    "US_liquid_cup",
]
value = "pint / 2"

[unit.barrel]
defined_symbol = "bbl"
value = "31.5 * gallon"

[unit.oil_barrel]
defined_symbol = "oil_bbl"
value = "42 * gallon"

[unit.beer_barrel]
defined_symbol = "beer_bbl"
value = "31 * gallon"

[unit.hogshead]
value = "63 * gallon"

[unit.dram]
defined_symbol = "dr"
aliases = [
    "avoirdupois_dram",
    "avdp_dram",
    "drachm",
]
value = "pound / 256"

[unit.ounce]
defined_symbol = "oz"
aliases = [
    "avoirdupois_ounce",
    "avdp_ounce",
]
value = "pound / 16"

[unit.pound]
defined_symbol = "lb"
aliases = [
    "avoirdupois_pound",
    "avdp_pound",
]
value = "7e3 * grain"

[unit.stone]
value = "14 * pound"

[unit.quarter]
value = "28 * stone"

[unit.bag]
value = "94 * pound"

[unit.hundredweight]
defined_symbol = "cwt"
aliases = [
    "short_hundredweight",
]
value = "100 * pound"

[unit.long_hundredweight]
value = "112 * pound"

[unit.ton]
aliases = [
    "short_ton",
]
value = "2e3 * pound"

[unit.long_ton]
value = "2240 * pound"

[unit.slug]
value = "g_0 * pound * second ** 2 / foot"

[unit.slinch]
defined_symbol = "blob"
aliases = [
    "slugette",
]
value = "g_0 * pound * second ** 2 / inch"

[unit.force_ounce]
defined_symbol = "ozf"
aliases = [
    "ounce_force",
]
value = "g_0 * ounce"

[unit.force_pound]
defined_symbol = "lbf"
aliases = [
    "pound_force",
]
value = "g_0 * pound"

[unit.force_ton]
aliases = [
    "ton_force",
    "force_short_ton",
    "short_ton_force",
]
value = "g_0 * ton"

[unit.force_long_ton]
aliases = [
    "long_ton_force",
]
value = "g_0 * long_ton"

[unit.kip]
value = "1e3 * force_pound"

[unit.poundal]
defined_symbol = "pdl"
value = "pound * foot / second ** 2"

[unit.UK_hundredweight]
defined_symbol = "UK_cwt"
value = "long_hundredweight"

[unit.UK_ton]
value = "long_ton"

[unit.UK_force_ton]
aliases = [
    "UK_ton_force",
]
value = "force_long_ton"

[unit.US_hundredweight]
defined_symbol = "US_cwt"
value = "hundredweight"

[unit.US_ton]
value = "ton"

[unit.US_force_ton]
aliases = [
    "US_ton_force",
]
value = "force_ton"

[unit.pennyweight]
defined_symbol = "dwt"
value = "24 * grain"

[unit.troy_ounce]
defined_symbol = "toz"
aliases = [
    "ozt",
]
value = "480 * grain"

[unit.troy_pound]
defined_symbol = "tlb"
aliases = [
    "lbt",
]
value = "12 * troy_ounce"

[unit.scruple]
value = "20 * grain"

[unit.apothecary_dram]
defined_symbol = "ap_dr"
value = "3 * scruple"

[unit.apothecary_ounce]
defined_symbol = "ap_oz"
value = "8 * apothecary_dram"

[unit.apothecary_pound]
defined_symbol = "ap_lb"
value = "12 * apothecary_ounce"

[unit.imperial_minim]
value = "imperial_fluid_ounce / 480"

[unit.imperial_fluid_scruple]
value = "imperial_fluid_ounce / 24"

[unit.imperial_fluid_drachm]
defined_symbol = "imperial_fldr"
aliases = [
    "imperial_fluid_dram",
]
value = "imperial_fluid_ounce / 8"

[unit.imperial_fluid_ounce]
defined_symbol = "imperial_floz"
aliases = [
    "UK_fluid_ounce",
]
value = "imperial_pint / 20"

[unit.imperial_gill]
defined_symbol = "imperial_gi"
aliases = [
    "UK_gill",
]
value = "imperial_pint / 4"

[unit.imperial_cup]
defined_symbol = "imperial_cp"
aliases = [
    "UK_cup",
]
value = "imperial_pint / 2"

[unit.imperial_pint]
defined_symbol = "imperial_pt"
aliases = [
    "UK_pint",
]
value = "imperial_gallon / 8"

[unit.imperial_quart]
defined_symbol = "imperial_qt"
aliases = [
    "UK_quart",
]
value = "imperial_gallon / 4"

[unit.imperial_gallon]
defined_symbol = "imperial_gal"
aliases = [
    "UK_gallon",
]
value = "4.54609 * liter"

[unit.imperial_peck]
defined_symbol = "imperial_pk"
aliases = [
    "UK_pk",
]
value = "2 * imperial_gallon"

[unit.imperial_bushel]
defined_symbol = "imperial_bu"
aliases = [
    "UK_bushel",
]
value = "8 * imperial_gallon"

[unit.imperial_barrel]
defined_symbol = "imperial_bbl"
aliases = [
    "UK_bbl",
]
value = "36 * imperial_gallon"

[unit.pica]
aliases = [
    "printers_pica",
]
value = "inch / 6"

[unit.point]
defined_symbol = "pp"
aliases = [
    "printers_point",
    "big_point",
    "bp",
]
value = "pica / 12"

[unit.didot]
value = "1 / 2660 * m"

[unit.cicero]
value = "12 * didot"

[unit.tex_point]
value = "inch / 72.27"

[unit.tex_pica]
value = "12 * tex_point"

[unit.tex_didot]
value = "1238 / 1157 * tex_point"

[unit.tex_cicero]
value = "12 * tex_didot"

[unit.scaled_point]
value = "tex_point / 65536"

[unit.css_pixel]
defined_symbol = "px"
value = "inch / 96"

[unit.pixel]
aliases = [
    "dot",
    "pel",
    "picture_element",
]
value = "[printing_unit]"

[unit.pixels_per_centimeter]
defined_symbol = "PPCM"
value = "pixel / cm"

[unit.pixels_per_inch]
defined_symbol = "dots_per_inch"
aliases = [
    "PPI",
    "ppi",
    "DPI",
    "printers_dpi",
]
value = "pixel / inch"

[unit.bits_per_pixel]
defined_symbol = "bpp"
value = "bit / pixel"

[unit.tex]
defined_symbol = "Tt"
value = "gram / kilometer"

[unit.dtex]
value = "decitex"

[unit.denier]
defined_symbol = "den"
value = "gram / (9 * kilometer)"

[unit.jute]
defined_symbol = "Tj"
value = "pound / (14400 * yard)"

[unit.aberdeen]
defined_symbol = "Ta"
value = "jute"

[unit.RKM]
value = "gf / tex"

[unit.number_english]
defined_symbol = "Ne"
aliases = [
    "NeC",
    "ECC",
]
value = "840 * yard / pound"

[unit.number_meter]
defined_symbol = "Nm"
value = "kilometer / kilogram"

[unit.franklin]
defined_symbol = "Fr"
aliases = [
    "statcoulomb",
    "statC",
    "esu",
]
value = "erg ** 0.5 * centimeter ** 0.5"

[unit.statvolt]
defined_symbol = "statV"
value = "erg / franklin"

[unit.statampere]
defined_symbol = "statA"
value = "franklin / second"

[unit.gauss]
defined_symbol = "G"
value = "dyne / franklin"

[unit.maxwell]
defined_symbol = "Mx"
value = "gauss * centimeter ** 2"

[unit.oersted]
defined_symbol = "Oe"
aliases = [
    "ørsted",
]
value = "dyne / maxwell"

[unit.statohm]
defined_symbol = "statΩ"
value = "statvolt / statampere"

[unit.statfarad]
defined_symbol = "statF"
value = "franklin / statvolt"

[unit.statmho]
value = "statampere / statvolt"

[unit.statweber]
defined_symbol = "statWb"
value = "statvolt * second"

[unit.stattesla]
defined_symbol = "statT"
value = "statweber / centimeter ** 2"

[unit.stathenry]
defined_symbol = "statH"
value = "statweber / statampere"

[dimension.area]
value = "[length] ** 2"

[dimension.volume]
value = "[length] ** 3"

[dimension.frequency]
value = "1 / [time]"

[dimension.wavenumber]
value = "1 / [length]"

[dimension.velocity]
value = "[length] / [time]"

[dimension.speed]
value = "[velocity]"

[dimension.volumetric_flow_rate]
value = "[volume] / [time]"

[dimension.acceleration]
value = "[velocity] / [time]"

[dimension.force]
value = "[mass] * [acceleration]"

[dimension.energy]
value = "[force] * [length]"

[dimension.power]
value = "[energy] / [time]"

[dimension.momentum]
value = "[length] * [mass] / [time]"

[dimension.density]
value = "[mass] / [volume]"

[dimension.pressure]
value = "[force] / [area]"

[dimension.torque]
value = "[force] * [length]"

[dimension.viscosity]
value = "[pressure] * [time]"

[dimension.kinematic_viscosity]
value = "[area] / [time]"

[dimension.fluidity]
value = "1 / [viscosity]"

[dimension.concentration]
value = "[substance] / [volume]"

[dimension.activity]
value = "[substance] / [time]"

[dimension.entropy]
value = "[energy] / [temperature]"

[dimension.molar_entropy]
value = "[entropy] / [substance]"

[dimension.heat_transmission]
value = "[energy] / [area]"

[dimension.luminance]
value = "[luminosity] / [area]"

[dimension.luminous_flux]
value = "[luminosity]"

[dimension.illuminance]
value = "[luminous_flux] / [area]"

[dimension.intensity]
value = "[power] / [area]"

[dimension.charge]
value = "[current] * [time]"

[dimension.electric_potential]
value = "[energy] / [charge]"

[dimension.electric_field]
value = "[electric_potential] / [length]"

[dimension.electric_displacement_field]
value = "[charge] / [area]"

[dimension.reduced_electric_field]
value = "[electric_field] * [area]"

[dimension.resistance]
value = "[electric_potential] / [current]"

[dimension.resistivity]
value = "[resistance] * [length]"

[dimension.conductance]
value = "[current] / [electric_potential]"

[dimension.capacitance]
value = "[charge] / [electric_potential]"

[dimension.magnetic_flux]
value = "[electric_potential] * [time]"

[dimension.inductance]
value = "[magnetic_flux] / [current]"

[dimension.magnetic_field]
value = "[magnetic_flux] / [area]"

[dimension.magnetomotive_force]
value = "[current]"

[dimension.magnetic_field_strength]
value = "[current] / [length]"

[dimension.electric_dipole]
value = "[charge] * [length]"

[dimension.electric_quadrupole]
value = "[charge] * [area]"

[dimension.magnetic_dipole]
value = "[current] * [area]"

[dimension.refractive_index]
value = "[]"

[dimension.gaussian_charge]
value = "[length] ** 1.5 * [mass] ** 0.5 / [time]"

[dimension.gaussian_current]
value = "[gaussian_charge] / [time]"

[dimension.gaussian_electric_potential]
value = "[gaussian_charge] / [length]"

[dimension.gaussian_electric_field]
value = "[gaussian_electric_potential] / [length]"

[dimension.gaussian_electric_displacement_field]
value = "[gaussian_charge] / [area]"

[dimension.gaussian_electric_flux]
value = "[gaussian_charge]"

[dimension.gaussian_electric_dipole]
value = "[gaussian_charge] * [length]"

[dimension.gaussian_electric_quadrupole]
value = "[gaussian_charge] * [area]"

[dimension.gaussian_magnetic_field]
value = "[force] / [gaussian_charge]"

[dimension.gaussian_magnetic_field_strength]
value = "[gaussian_magnetic_field]"

[dimension.gaussian_magnetic_flux]
value = "[gaussian_magnetic_field] * [area]"

[dimension.gaussian_magnetic_dipole]
value = "[energy] / [gaussian_magnetic_field]"

[dimension.gaussian_resistance]
value = "[gaussian_electric_potential] / [gaussian_current]"

[dimension.gaussian_resistivity]
value = "[gaussian_resistance] * [length]"

[dimension.gaussian_capacitance]
value = "[gaussian_charge] / [gaussian_electric_potential]"

[dimension.gaussian_inductance]
value = "[gaussian_electric_potential] * [time] / [gaussian_current]"

[dimension.gaussian_conductance]
value = "[gaussian_current] / [gaussian_electric_potential]"

[dimension.esu_charge]
value = "[length] ** 1.5 * [mass] ** 0.5 / [time]"

[dimension.esu_current]
value = "[esu_charge] / [time]"

[dimension.esu_electric_potential]
value = "[esu_charge] / [length]"

[dimension.esu_magnetic_flux]
value = "[esu_electric_potential] * [time]"

[dimension.esu_magnetic_field]
value = "[esu_magnetic_flux] / [area]"

[dimension.esu_magnetic_field_strength]
value = "[esu_current] / [length]"

[dimension.esu_magnetic_dipole]
value = "[esu_current] * [area]"

[group.USCSLengthInternational.definitions.thou]
defined_symbol = "th"
aliases = [
    "mil_length",
]
value = "1e-3 * inch"

[group.USCSLengthInternational.definitions.inch]
defined_symbol = "in"
aliases = [
    "international_inch",
    "inches",
    "international_inches",
]
value = "yard / 36"

[group.USCSLengthInternational.definitions.hand]
value = "4 * inch"

[group.USCSLengthInternational.definitions.foot]
defined_symbol = "ft"
aliases = [
    "international_foot",
    "feet",
    "international_feet",
]
value = "yard / 3"

[group.USCSLengthInternational.definitions.yard]
defined_symbol = "yd"
aliases = [
    "international_yard",
]
value = "0.9144 * meter"

[group.USCSLengthInternational.definitions.mile]
defined_symbol = "mi"
aliases = [
    "international_mile",
]
value = "1760 * yard"

[group.USCSLengthInternational.definitions.circular_mil]
defined_symbol = "cmil"
value = "π / 4 * mil_length ** 2"

[group.USCSLengthInternational.definitions.square_inch]
defined_symbol = "sq_in"
aliases = [
    "square_inches",
]
value = "inch ** 2"

[group.USCSLengthInternational.definitions.square_foot]
defined_symbol = "sq_ft"
aliases = [
    "square_feet",
]
value = "foot ** 2"

[group.USCSLengthInternational.definitions.square_yard]
defined_symbol = "sq_yd"
value = "yard ** 2"

[group.USCSLengthInternational.definitions.square_mile]
defined_symbol = "sq_mi"
value = "mile ** 2"

[group.USCSLengthInternational.definitions.cubic_inch]
defined_symbol = "cu_in"
value = "in ** 3"

[group.USCSLengthInternational.definitions.cubic_foot]
defined_symbol = "cu_ft"
aliases = [
    "cubic_feet",
]
value = "ft ** 3"

[group.USCSLengthInternational.definitions.cubic_yard]
defined_symbol = "cu_yd"
value = "yd ** 3"

[group.USCSLengthSurvey.definitions.link]
defined_symbol = "li"
aliases = [
    "survey_link",
]
value = "1e-2 * chain"

[group.USCSLengthSurvey.definitions.survey_foot]
defined_symbol = "sft"
value = "1200 / 3937 * meter"

[group.USCSLengthSurvey.definitions.fathom]
value = "6 * survey_foot"

[group.USCSLengthSurvey.definitions.rod]
defined_symbol = "rd"
aliases = [
    "pole",
    "perch",
]
value = "16.5 * survey_foot"

[group.USCSLengthSurvey.definitions.chain]
value = "4 * rod"

[group.USCSLengthSurvey.definitions.furlong]
defined_symbol = "fur"
value = "40 * rod"

[group.USCSLengthSurvey.definitions.cables_length]
value = "120 * fathom"

[group.USCSLengthSurvey.definitions.survey_mile]
defined_symbol = "smi"
aliases = [
    "us_statute_mile",
]
value = "5280 * survey_foot"

[group.USCSLengthSurvey.definitions.league]
value = "3 * survey_mile"

[group.USCSLengthSurvey.definitions.square_rod]
defined_symbol = "sq_rod"
aliases = [
    "sq_pole",
    "sq_perch",
]
value = "rod ** 2"

[group.USCSLengthSurvey.definitions.acre]
value = "10 * chain ** 2"

[group.USCSLengthSurvey.definitions.square_survey_mile]
aliases = [
    "section",
]
value = "survey_mile ** 2"

[group.USCSLengthSurvey.definitions.square_league]
value = "league ** 2"

[group.USCSLengthSurvey.definitions.acre_foot]
aliases = [
    "acre_feet",
]
value = "acre * survey_foot"

[group.USCSDryVolume.definitions.dry_pint]
defined_symbol = "dpi"
aliases = [
    "US_dry_pint",
]
value = "bushel / 64"

[group.USCSDryVolume.definitions.dry_quart]
defined_symbol = "dqt"
aliases = [
    "US_dry_quart",
]
value = "bushel / 32"

[group.USCSDryVolume.definitions.dry_gallon]
defined_symbol = "dgal"
aliases = [
    "US_dry_gallon",
]
value = "bushel / 8"

[group.USCSDryVolume.definitions.peck]
defined_symbol = "pk"
value = "bushel / 4"

[group.USCSDryVolume.definitions.bushel]
defined_symbol = "bu"
value = "2150.42 cubic_inch"

[group.USCSDryVolume.definitions.dry_barrel]
aliases = [
    "US_dry_barrel",
]
value = "7056 cubic_inch"

[group.USCSDryVolume.definitions.board_foot]
defined_symbol = "FBM"
aliases = [
    "board_feet",
    "BF",
    "BDFT",
    "super_foot",
    "superficial_foot",
    "super_feet",
    "superficial_feet",
]
value = "ft * ft * in"

[group.USCSLiquidVolume.definitions.minim]
value = "pint / 7680"

[group.USCSLiquidVolume.definitions.fluid_dram]
defined_symbol = "fldr"
aliases = [
    "fluidram",
    "US_fluid_dram",
    "US_liquid_dram",
]
value = "pint / 128"

[group.USCSLiquidVolume.definitions.fluid_ounce]
defined_symbol = "floz"
aliases = [
    "US_fluid_ounce",
    "US_liquid_ounce",
]
value = "pint / 16"

[group.USCSLiquidVolume.definitions.gill]
defined_symbol = "gi"
aliases = [
    "liquid_gill",
    "US_liquid_gill",
]
value = "pint / 4"

[group.USCSLiquidVolume.definitions.pint]
defined_symbol = "pt"
aliases = [
    "liquid_pint",
    "US_pint",
]
value = "quart / 2"

[group.USCSLiquidVolume.definitions.fifth]
aliases = [
    "US_liquid_fifth",
]
value = "gallon / 5"

[group.USCSLiquidVolume.definitions.quart]
defined_symbol = "qt"
aliases = [
    "liquid_quart",
    "US_liquid_quart",
]
value = "gallon / 4"

[group.USCSLiquidVolume.definitions.gallon]
defined_symbol = "gal"
aliases = [
    "liquid_gallon",
    "US_liquid_gallon",
]
value = "231 * cubic_inch"

[group.USCSVolumeOther.definitions.teaspoon]
defined_symbol = "tsp"
value = "fluid_ounce / 6"

[group.USCSVolumeOther.definitions.tablespoon]
defined_symbol = "tbsp"
value = "fluid_ounce / 2"

[group.USCSVolumeOther.definitions.shot]
defined_symbol = "jig"
aliases = [
    "US_shot",
]
value = "3 * tablespoon"

[group.USCSVolumeOther.definitions.cup]
defined_symbol = "cp"
aliases = [
    "liquid_cup",
    "US_liquid_cup",
]
value = "pint / 2"

[group.USCSVolumeOther.definitions.barrel]
defined_symbol = "bbl"
value = "31.5 * gallon"

[group.USCSVolumeOther.definitions.oil_barrel]
defined_symbol = "oil_bbl"
value = "42 * gallon"

[group.USCSVolumeOther.definitions.beer_barrel]
defined_symbol = "beer_bbl"
value = "31 * gallon"

[group.USCSVolumeOther.definitions.hogshead]
value = "63 * gallon"

[group.Avoirdupois.definitions.dram]
defined_symbol = "dr"
aliases = [
    "avoirdupois_dram",
    "avdp_dram",
    "drachm",
]
value = "pound / 256"

[group.Avoirdupois.definitions.ounce]
defined_symbol = "oz"
aliases = [
    "avoirdupois_ounce",
    "avdp_ounce",
]
value = "pound / 16"

[group.Avoirdupois.definitions.pound]
defined_symbol = "lb"
aliases = [
    "avoirdupois_pound",
    "avdp_pound",
]
value = "7e3 * grain"

[group.Avoirdupois.definitions.stone]
value = "14 * pound"

[group.Avoirdupois.definitions.quarter]
value = "28 * stone"

[group.Avoirdupois.definitions.bag]
value = "94 * pound"

[group.Avoirdupois.definitions.hundredweight]
defined_symbol = "cwt"
aliases = [
    "short_hundredweight",
]
value = "100 * pound"

[group.Avoirdupois.definitions.long_hundredweight]
value = "112 * pound"

[group.Avoirdupois.definitions.ton]
aliases = [
    "short_ton",
]
value = "2e3 * pound"

[group.Avoirdupois.definitions.long_ton]
value = "2240 * pound"

[group.Avoirdupois.definitions.slug]
value = "g_0 * pound * second ** 2 / foot"

[group.Avoirdupois.definitions.slinch]
defined_symbol = "blob"
aliases = [
    "slugette",
]
value = "g_0 * pound * second ** 2 / inch"

[group.Avoirdupois.definitions.force_ounce]
defined_symbol = "ozf"
aliases = [
    "ounce_force",
]
value = "g_0 * ounce"

[group.Avoirdupois.definitions.force_pound]
defined_symbol = "lbf"
aliases = [
    "pound_force",
]
value = "g_0 * pound"

[group.Avoirdupois.definitions.force_ton]
aliases = [
    "ton_force",
    "force_short_ton",
    "short_ton_force",
]
value = "g_0 * ton"

[group.Avoirdupois.definitions.force_long_ton]
aliases = [
    "long_ton_force",
]
value = "g_0 * long_ton"

[group.Avoirdupois.definitions.kip]
value = "1e3 * force_pound"

[group.Avoirdupois.definitions.poundal]
defined_symbol = "pdl"
value = "pound * foot / second ** 2"

[group.AvoirdupoisUK]
using_group_names = [
    "Avoirdupois",
]

[group.AvoirdupoisUK.definitions.UK_hundredweight]
defined_symbol = "UK_cwt"
value = "long_hundredweight"

[group.AvoirdupoisUK.definitions.UK_ton]
value = "long_ton"

[group.AvoirdupoisUK.definitions.UK_force_ton]
aliases = [
    "UK_ton_force",
]
value = "force_long_ton"

[group.AvoirdupoisUS]
using_group_names = [
    "Avoirdupois",
]

[group.AvoirdupoisUS.definitions.US_hundredweight]
defined_symbol = "US_cwt"
value = "hundredweight"

[group.AvoirdupoisUS.definitions.US_ton]
value = "ton"

[group.AvoirdupoisUS.definitions.US_force_ton]
aliases = [
    "US_ton_force",
]
value = "force_ton"

[group.Troy.definitions.pennyweight]
defined_symbol = "dwt"
value = "24 * grain"

[group.Troy.definitions.troy_ounce]
defined_symbol = "toz"
aliases = [
    "ozt",
]
value = "480 * grain"

[group.Troy.definitions.troy_pound]
defined_symbol = "tlb"
aliases = [
    "lbt",
]
value = "12 * troy_ounce"

[group.Apothecary.definitions.scruple]
value = "20 * grain"

[group.Apothecary.definitions.apothecary_dram]
defined_symbol = "ap_dr"
value = "3 * scruple"

[group.Apothecary.definitions.apothecary_ounce]
defined_symbol = "ap_oz"
value = "8 * apothecary_dram"

[group.Apothecary.definitions.apothecary_pound]
defined_symbol = "ap_lb"
value = "12 * apothecary_ounce"

[group.ImperialVolume.definitions.imperial_minim]
value = "imperial_fluid_ounce / 480"

[group.ImperialVolume.definitions.imperial_fluid_scruple]
value = "imperial_fluid_ounce / 24"

[group.ImperialVolume.definitions.imperial_fluid_drachm]
defined_symbol = "imperial_fldr"
aliases = [
    "imperial_fluid_dram",
]
value = "imperial_fluid_ounce / 8"

[group.ImperialVolume.definitions.imperial_fluid_ounce]
defined_symbol = "imperial_floz"
aliases = [
    "UK_fluid_ounce",
]
value = "imperial_pint / 20"

[group.ImperialVolume.definitions.imperial_gill]
defined_symbol = "imperial_gi"
aliases = [
    "UK_gill",
]
value = "imperial_pint / 4"

[group.ImperialVolume.definitions.imperial_cup]
defined_symbol = "imperial_cp"
aliases = [
    "UK_cup",
]
value = "imperial_pint / 2"

[group.ImperialVolume.definitions.imperial_pint]
defined_symbol = "imperial_pt"
aliases = [
    "UK_pint",
]
value = "imperial_gallon / 8"

[group.ImperialVolume.definitions.imperial_quart]
defined_symbol = "imperial_qt"
aliases = [
    "UK_quart",
]
value = "imperial_gallon / 4"

[group.ImperialVolume.definitions.imperial_gallon]
defined_symbol = "imperial_gal"
aliases = [
    "UK_gallon",
]
value = "4.54609 * liter"

[group.ImperialVolume.definitions.imperial_peck]
defined_symbol = "imperial_pk"
aliases = [
    "UK_pk",
]
value = "2 * imperial_gallon"

[group.ImperialVolume.definitions.imperial_bushel]
defined_symbol = "imperial_bu"
aliases = [
    "UK_bushel",
]
value = "8 * imperial_gallon"

[group.ImperialVolume.definitions.imperial_barrel]
defined_symbol = "imperial_bbl"
aliases = [
    "UK_bbl",
]
value = "36 * imperial_gallon"

[group.Printer.definitions.pica]
aliases = [
    "printers_pica",
]
value = "inch / 6"

[group.Printer.definitions.point]
defined_symbol = "pp"
aliases = [
    "printers_point",
    "big_point",
    "bp",
]
value = "pica / 12"

[group.Printer.definitions.didot]
value = "1 / 2660 * m"

[group.Printer.definitions.cicero]
value = "12 * didot"

[group.Printer.definitions.tex_point]
value = "inch / 72.27"

[group.Printer.definitions.tex_pica]
value = "12 * tex_point"

[group.Printer.definitions.tex_didot]
value = "1238 / 1157 * tex_point"

[group.Printer.definitions.tex_cicero]
value = "12 * tex_didot"

[group.Printer.definitions.scaled_point]
value = "tex_point / 65536"

[group.Printer.definitions.css_pixel]
defined_symbol = "px"
value = "inch / 96"

[group.Printer.definitions.pixel]
aliases = [
    "dot",
    "pel",
    "picture_element",
]
value = "[printing_unit]"

[group.Printer.definitions.pixels_per_centimeter]
defined_symbol = "PPCM"
value = "pixel / cm"

[group.Printer.definitions.pixels_per_inch]
defined_symbol = "dots_per_inch"
aliases = [
    "PPI",
    "ppi",
    "DPI",
    "printers_dpi",
]
value = "pixel / inch"

[group.Printer.definitions.bits_per_pixel]
defined_symbol = "bpp"
value = "bit / pixel"

[group.Textile.definitions.tex]
defined_symbol = "Tt"
value = "gram / kilometer"

[group.Textile.definitions.dtex]
value = "decitex"

[group.Textile.definitions.denier]
defined_symbol = "den"
value = "gram / (9 * kilometer)"

[group.Textile.definitions.jute]
defined_symbol = "Tj"
value = "pound / (14400 * yard)"

[group.Textile.definitions.aberdeen]
defined_symbol = "Ta"
value = "jute"

[group.Textile.definitions.RKM]
value = "gf / tex"

[group.Textile.definitions.number_english]
defined_symbol = "Ne"
aliases = [
    "NeC",
    "ECC",
]
value = "840 * yard / pound"

[group.Textile.definitions.number_meter]
defined_symbol = "Nm"
value = "kilometer / kilogram"

[group.Gaussian.definitions.franklin]
defined_symbol = "Fr"
aliases = [
    "statcoulomb",
    "statC",
    "esu",
]
value = "erg ** 0.5 * centimeter ** 0.5"

[group.Gaussian.definitions.statvolt]
defined_symbol = "statV"
value = "erg / franklin"

[group.Gaussian.definitions.statampere]
defined_symbol = "statA"
value = "franklin / second"

[group.Gaussian.definitions.gauss]
defined_symbol = "G"
value = "dyne / franklin"

[group.Gaussian.definitions.maxwell]
defined_symbol = "Mx"
value = "gauss * centimeter ** 2"

[group.Gaussian.definitions.oersted]
defined_symbol = "Oe"
aliases = [
    "ørsted",
]
value = "dyne / maxwell"

[group.Gaussian.definitions.statohm]
defined_symbol = "statΩ"
value = "statvolt / statampere"

[group.Gaussian.definitions.statfarad]
defined_symbol = "statF"
value = "franklin / statvolt"

[group.Gaussian.definitions.statmho]
value = "statampere / statvolt"

[group.ESU]
using_group_names = [
    "Gaussian",
]

[group.ESU.definitions.statweber]
defined_symbol = "statWb"
value = "statvolt * second"

[group.ESU.definitions.stattesla]
defined_symbol = "statT"
value = "statweber / centimeter ** 2"

[group.ESU.definitions.stathenry]
defined_symbol = "statH"
value = "statweber / statampere"

[system.SI]
using_group_names = [
    "root",
]
rules = [
    "second",
    "meter",
    "kilogram",
    "ampere",
    "kelvin",
    "mole",
    "candela",
]

[system.mks]
using_group_names = [
    "international",
]
rules = [
    "meter",
    "kilogram",
    "second",
]

[system.cgs]
using_group_names = [
    "international",
    "Gaussian",
    "ESU",
]
rules = [
    "centimeter",
    "gram",
    "second",
]

[system.atomic]
using_group_names = [
    "international",
]
rules = [
    "bohr: meter",
    "electron_mass: gram",
    "atomic_unit_of_time: second",
    "atomic_unit_of_current: ampere",
    "atomic_unit_of_temperature: kelvin",
]

[system.Planck]
using_group_names = [
    "international",
]
rules = [
    "planck_length: meter",
    "planck_mass: gram",
    "planck_time: second",
    "planck_current: ampere",
    "planck_temperature: kelvin",
]

[system.imperial]
using_group_names = [
    "ImperialVolume",
    "USCSLengthInternational",
    "AvoirdupoisUK",
]
rules = [
    "yard",
    "pound",
]

[system.US]
using_group_names = [
    "USCSLiquidVolume",
    "USCSDryVolume",
    "USCSVolumeOther",
    "USCSLengthInternational",
    "USCSLengthSurvey",
    "AvoirdupoisUS",
]
rules = [
    "yard",
    "pound",
]

[context.Gaussian]
aliases = [
    "Gau",
]
relations = [
    "[gaussian_charge] -> [charge]: value / k_C ** 0.5",
    "[charge] -> [gaussian_charge]: value * k_C ** 0.5",
    "[gaussian_current] -> [current]: value / k_C ** 0.5",
    "[current] -> [gaussian_current]: value * k_C ** 0.5",
    "[gaussian_electric_potential] -> [electric_potential]: value * k_C ** 0.5",
    "[electric_potential] -> [gaussian_electric_potential]: value / k_C ** 0.5",
    "[gaussian_electric_field] -> [electric_field]: value * k_C ** 0.5",
    "[electric_field] -> [gaussian_electric_field]: value / k_C ** 0.5",
    "[gaussian_electric_displacement_field] -> [electric_displacement_field]: value / (4 * π / ε_0) ** 0.5",
    "[electric_displacement_field] -> [gaussian_electric_displacement_field]: value * (4 * π / ε_0) ** 0.5",
    "[gaussian_electric_dipole] -> [electric_dipole]: value / k_C ** 0.5",
    "[electric_dipole] -> [gaussian_electric_dipole]: value * k_C ** 0.5",
    "[gaussian_electric_quadrupole] -> [electric_quadrupole]: value / k_C ** 0.5",
    "[electric_quadrupole] -> [gaussian_electric_quadrupole]: value * k_C ** 0.5",
    "[gaussian_magnetic_field] -> [magnetic_field]: value / (4 * π / µ_0) ** 0.5",
    "[magnetic_field] -> [gaussian_magnetic_field]: value * (4 * π / µ_0) ** 0.5",
    "[gaussian_magnetic_flux] -> [magnetic_flux]: value / (4 * π / µ_0) ** 0.5",
    "[magnetic_flux] -> [gaussian_magnetic_flux]: value * (4 * π / µ_0) ** 0.5",
    "[gaussian_magnetic_field_strength] -> [magnetic_field_strength]: value / (4 * π * µ_0) ** 0.5",
    "[magnetic_field_strength] -> [gaussian_magnetic_field_strength]: value * (4 * π * µ_0) ** 0.5",
    "[gaussian_magnetic_dipole] -> [magnetic_dipole]: value * (4 * π / µ_0) ** 0.5",
    "[magnetic_dipole] -> [gaussian_magnetic_dipole]: value / (4 * π / µ_0) ** 0.5",
    "[gaussian_resistance] -> [resistance]: value * k_C",
    "[resistance] -> [gaussian_resistance]: value / k_C",
    "[gaussian_resistivity] -> [resistivity]: value * k_C",
    "[resistivity] -> [gaussian_resistivity]: value / k_C",
    "[gaussian_capacitance] -> [capacitance]: value / k_C",
    "[capacitance] -> [gaussian_capacitance]: value * k_C",
    "[gaussian_inductance] -> [inductance]: value * k_C",
    "[inductance] -> [gaussian_inductance]: value / k_C",
    "[gaussian_conductance] -> [conductance]: value / k_C",
    "[conductance] -> [gaussian_conductance]: value * k_C",
]

[context.ESU]
aliases = [
    "esu",
]
relations = [
    "[esu_magnetic_field] -> [magnetic_field]: value * k_C ** 0.5",
    "[magnetic_field] -> [esu_magnetic_field]: value / k_C ** 0.5",
    "[esu_magnetic_flux] -> [magnetic_flux]: value * k_C ** 0.5",
    "[magnetic_flux] -> [esu_magnetic_flux]: value / k_C ** 0.5",
    "[esu_magnetic_field_strength] -> [magnetic_field_strength]: value / (4 * π / ε_0) ** 0.5",
    "[magnetic_field_strength] -> [esu_magnetic_field_strength]: value * (4 * π / ε_0) ** 0.5",
    "[esu_magnetic_dipole] -> [magnetic_dipole]: value / k_C ** 0.5",
    "[magnetic_dipole] -> [esu_magnetic_dipole]: value * k_C ** 0.5",
]

[context.spectroscopy]
aliases = [
    "sp",
]
relations = [
    "[length] <-> [frequency]: speed_of_light / n / value",
    "[frequency] -> [energy]: planck_constant * value",
    "[energy] -> [frequency]: value / planck_constant",
    "[wavenumber] <-> [length]: 1 / value",
]

[context.spectroscopy.defaults]
n = "1"

[context.boltzmann]
relations = [
    "[temperature] -> [energy]: boltzmann_constant * value",
    "[energy] -> [temperature]: value / boltzmann_constant",
]

[context.energy]
relations = [
    "[energy] -> [energy] / [substance]: value * N_A",
    "[energy] / [substance] -> [energy]: value / N_A",
    "[energy] -> [mass]: value / c ** 2",
    "[mass] -> [energy]: value * c ** 2",
]

[context.chemistry]
aliases = [
    "chem",
]
relations = [
    "[substance] -> [mass]: value * mw",
    "[mass] -> [substance]: value / mw",
    "[substance] / [volume] -> [mass] / [volume]: value * mw",
    "[mass] / [volume] -> [substance] / [volume]: value / mw",
    "[substance] / [mass] -> [mass] / [mass]: value * mw",
    "[mass] / [mass] -> [substance] / [mass]: value / mw",
    "[substance] / [volume] -> [substance]: value * volume",
    "[substance] -> [substance] / [volume]: value / volume",
    "[substance] / [mass] -> [substance]: value * solvent_mass",
    "[substance] -> [substance] / [mass]: value / solvent_mass",
    "[substance] / [mass] -> [substance]/[volume]: value * solvent_mass / volume",
    "[substance] / [volume] -> [substance] / [mass]: value / solvent_mass * volume",
]

[context.chemistry.defaults]
mw = "0"
volume = "0"
solvent_mass = "0"

[context.textile]
relations = [
    "[mass] / [length] <-> [length] / [mass]: 1 / value",
]
